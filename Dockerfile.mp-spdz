FROM ubuntu:18.04

ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive

#update apt-get
RUN apt-get update
#install gcc-8
RUN apt-get install -y gcc-8 g++-8

#install wget
RUN apt-get install -y wget

#install git
RUN apt-get install -y git
#set gcc to point to gcc-8
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8
RUN gcc --version
#install python3.9
RUN apt update
RUN apt install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN  apt update \
  && apt remove -y python3.6 \
  && apt install -y python3.9 python3.9-dev

#set python3 to point to python3.9
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1

RUN apt install -y python3-apt

RUN apt-get install -y python3-pip
RUN apt-get install -y python3.9-distutils
#install npm 
RUN apt-get install -y npm

#install bazellisk
RUN npm install -g @bazel/bazelisk


#install python-dev,python3.9-dev
RUN apt-get install -y python-dev
RUN apt-get install -y python3.9-dev

#install cmake
RUN wget https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2-linux-x86_64.tar.gz \
  && tar -zxf cmake-3.20.2-linux-x86_64.tar.gz \
  && chmod +x cmake-3.20.2-linux-x86_64/bin/cmake \
  && ln -s `pwd`/cmake-3.20.2-linux-x86_64/bin/cmake /usr/bin/cmake \
  && rm -rf /var/lib/apt/lists/* cmake-3.20.2-linux-x86_64.tar.gz

#download primihub
RUN git clone -b feature/node_as_share_lib  https://github.com/primihub/primihub.git
WORKDIR /primihub
#compile primihub
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8
RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8
RUN gcc --version
RUN apt-get update
RUN apt-get install -y m4
RUN bash pre_docker_build.sh \
  && bazel build --config=linux :libprimihub.so :cli --sandbox_debug
#write file relink.sh
RUN touch relink.sh
RUN echo '#!/bin/bash' >> relink.sh
RUN echo 'set +e' >> relink.sh
RUN echo 'set -x' >> relink.sh
RUN echo 'mkdir /usr/local/primihub' >> relink.sh
RUN echo 'DLLS=($(ldd bazel-bin/libprimihub.so | grep primihub | awk -F '"'"'=>'"'"' '"'"'{print $2}'"'"' | awk -F '"'"'\\('"'"' '"'"'{print $1}'"'"'))' >> relink.sh
RUN echo 'for dll in ${DLLS[@]}' >> relink.sh
RUN echo 'do' >> relink.sh
RUN echo '        cp ${dll} /usr/local/primihub/' >> relink.sh
RUN echo 'done' >> relink.sh
RUN echo 'cp ./bazel-bin/cli /usr/local/primihub/' >> relink.sh
RUN echo 'cp ./bazel-bin/libprimihub.so /usr/local/primihub/' >> relink.sh
RUN echo 'echo "/usr/local/primihub" >> /etc/ld.so.conf.d/primihub.conf' >> relink.sh 
RUN echo 'ldconfig' >> relink.sh
RUN bash relink.sh >> relink.sh

#download MP-SPDZ
WORKDIR /
#RUN git config --global user.name "keepmoving"
#RUN git config --global user.password "SBHzwyzhbxdsj2022!"
#RUN git clone https://git.code.tencent.com/keepmoving/MP-SPDZ
RUN git clone https://github.com/primihub/MP-SPDZ
WORKDIR /MP-SPDZ/
#compile primihub-party.x
RUN make primihub-party.x

#install golang
WORKDIR /tmp
RUN wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gz
RUN tar -zxvf go1.18.3.linux-amd64.tar.gz -C /usr/local/

#download bootstrap
WORKDIR / 
RUN git clone https://github.com/primihub/simple-bootstrap-node.git

#put dataset
RUN cp /primihub/data/* /tmp/ -r
RUN cp /primihub/data/ /MP-SPDZ/ -r
